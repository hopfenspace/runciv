{"openapi":"3.0.3","info":{"title":"runciv","description":"","contact":{"name":"Niklas Pfister","email":"git@omikron.dev"},"license":{"name":"AGPL-3.0"},"version":"0.1.0"},"paths":{"/api/v2/accounts/lookup":{"post":{"tags":["Accounts"],"summary":"Retrieve details for an account by its username","description":"Retrieve details for an account by its username\n\n**Important note**:\n\nUsernames can be changed, so don't assume you can cache them to do lookups for their\ndisplay names or uuids when necessary. They solely exist to provide a good user experience\nwhen searching for friends, etc..\n\nIf you receive a username by a user, you should convert them with this endpoint to an uuid.\nThose are used in the database to uniquely identify a user and can't be changed, just deleted.","operationId":"lookup_account_by_username","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LookupAccountUsernameRequest"}}},"required":true},"responses":{"200":{"description":"Returns the requested account data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/accounts/me":{"get":{"tags":["Accounts"],"summary":"Returns the account that is currently logged-in","description":"Returns the account that is currently logged-in","operationId":"get_me","responses":{"200":{"description":"Returns the account data of the current user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"put":{"tags":["Accounts"],"summary":"Updates the currently logged-in account","description":"Updates the currently logged-in account\n\nAll parameter are optional, but at least one of them is required.\n\nOn success, a [WsMessage::AccountUpdated] message is sent via websocket to the own user.\nThis is done to reflect account changes in multi-device circumstances.","operationId":"update_me","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateAccountRequest"}}},"required":true},"responses":{"200":{"description":"Account has been updated"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"delete":{"tags":["Accounts"],"summary":"Deletes the currently logged-in account","description":"Deletes the currently logged-in account","operationId":"delete_me","responses":{"200":{"description":"Deleted the currently logged-in account"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/accounts/me/setPassword":{"post":{"tags":["Accounts"],"summary":"Sets a new password for the currently logged-in account","description":"Sets a new password for the currently logged-in account","operationId":"set_password","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetPasswordRequest"}}},"required":true},"responses":{"200":{"description":"New password has been set"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/accounts/register":{"post":{"tags":["Accounts"],"summary":"Register a new account","description":"Register a new account","operationId":"register_account","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountRegistrationRequest"}}},"required":true},"responses":{"200":{"description":"Account got created"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v2/accounts/{uuid}":{"get":{"tags":["Accounts"],"summary":"Retrieve details for an account by uuid","description":"Retrieve details for an account by uuid\n\nAs usernames are changeable, accounts are identified by uuids, which are used throughout\nthe API.\n\nTo fetch `display_name` and `username` for a given `uuid`, this endpoint shall be used.","operationId":"lookup_account_by_uuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns the requested account data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/auth/login":{"post":{"tags":["Authentication"],"summary":"Login to runciv","description":"Login to runciv\n\nOn successful login you will retrieve a cookie.","operationId":"login","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"200":{"description":"Login successful"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v2/auth/logout":{"get":{"tags":["Authentication"],"summary":"Log out of this session","description":"Log out of this session\n\nLogs a logged-in user out of his session.","operationId":"logout","responses":{"200":{"description":"Logout successful"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}}}},"/api/v2/chats":{"get":{"tags":["Chats"],"summary":"Retrieve all chats the executing user has access to.","description":"Retrieve all chats the executing user has access to.\n\nIn the response, you will find different categories.","operationId":"get_all_chats","responses":{"200":{"description":"Returns the messages of the chat room","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetAllChatsResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/chats/{uuid}":{"get":{"tags":["Chats"],"summary":"Retrieve the messages of a chatroom","description":"Retrieve the messages of a chatroom\n\n`messages` should be sorted by the datetime of `message.created_at`.\n`message.uuid` should be used to uniquely identify chat messages.\nThis is needed as new messages are delivered via websocket\n\n`members` holds information about all members that are currently in the chat room (including\nyourself)","operationId":"get_chat","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns the messages of the chat room","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetChatResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"post":{"tags":["Chats"],"summary":"Send a message to the specified chatroom","description":"Send a message to the specified chatroom\n\nThe executing user must be a member of the chatroom and the `message` must not be empty.","operationId":"send_message","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendMessageRequest"}}},"required":true},"responses":{"200":{"description":"Returns the send chat message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatMessage"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/friends":{"get":{"tags":["Friends"],"summary":"Retrieve your friends and friend requests.","description":"Retrieve your friends and friend requests.\n\n`friends` is a list of already established friendships\n`friend_requests` is a list of friend requests (ingoing and outgoing)\n\nRegarding `friend_requests`:\n\nIf you have a request with `from.uuid` equal to your username, it means you have requested a\nfriendship, but the destination hasn't accepted yet.\n\nIn the other case, if your username is in `to.uuid`, you have received a friend request.","operationId":"get_friends","responses":{"200":{"description":"Returns all friends and friend requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetFriendResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"post":{"tags":["Friends"],"summary":"Create a new friend request","description":"Create a new friend request\n\nThe other party is notified via a [WsMessage::IncomingFriendRequest]","operationId":"create_friend_request","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFriendRequest"}}},"required":true},"responses":{"200":{"description":"Friend request has been created"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/friends/{uuid}":{"put":{"tags":["Friends"],"summary":"Accept a friend request","description":"Accept a friend request","operationId":"accept_friend_request","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Friend request accepted"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"delete":{"tags":["Friends"],"summary":"Don't want your friends anymore? Just delete them!","description":"Don't want your friends anymore? Just delete them!","operationId":"delete_friend","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Friend has been deleted"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/games":{"get":{"tags":["Games"],"summary":"Retrieves an overview of all open games of a player","description":"Retrieves an overview of all open games of a player\n\nThe response does not contain any full game state, but rather\na shortened game state identified by its ID and state identifier.\nIf the state (`game_data_id`) of a known game differs from the last known\nidentifier, the server has a newer state of the game. The `last_activity`\nfield is a convenience attribute and shouldn't be used for update checks.","operationId":"get_open_games","responses":{"200":{"description":"Returns all currently open games of a player","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetGameOverviewResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/games/{uuid}":{"get":{"tags":["Games"],"summary":"Retrieves a single game which is currently open (actively played)","description":"Retrieves a single game which is currently open (actively played)\n\nIf the game has been completed or aborted, it\nwill respond with a `GameNotFound` in `ApiErrorResponse`.","operationId":"get_game","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns a single game state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GameStateResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"put":{"tags":["Games"],"summary":"Upload a new game state for an existing game","description":"Upload a new game state for an existing game\n\nIf the game can't be updated (maybe it has been already completed or\naborted), it will respond with a `GameNotFound` in `ApiErrorResponse`.","operationId":"push_game_update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GameUploadRequest"}}},"required":true},"responses":{"200":{"description":"Returns the new data identifier of the uploaded game state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GameUploadResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/invites":{"get":{"tags":["Invites"],"summary":"Retrieve all invites for the executing user","description":"Retrieve all invites for the executing user","operationId":"get_invites","responses":{"200":{"description":"Retrieve all invites","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetInvitesResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"post":{"tags":["Invites"],"summary":"Invite a friend to a lobby.","description":"Invite a friend to a lobby.\n\nThe executing user must be in the specified open lobby.\nThe invited `friend` must not be in a friend request state.","operationId":"create_invite","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateInviteRequest"}}},"required":true},"responses":{"200":{"description":"Friend got invited"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/invites/{uuid}":{"delete":{"tags":["Invites"],"summary":"Reject or retract an invite to a lobby","description":"Reject or retract an invite to a lobby\n\nThis endpoint can be used either by the sender of the invite to retract the invite or\nby the receiver to reject the invite.","operationId":"delete_invite","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Invite was rejected"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/invites/{uuid}/accept":{"post":{"tags":["Invites"],"summary":"Accept an invite to a lobby","description":"Accept an invite to a lobby\n\nThe executing user must not be the owner of a lobby or already member of a lobby.\nTo be placed in a lobby, a active websocket connection is required.\n\nIf the lobby is already full, a [ApiError::LobbyFull] error is returned.\n\nOn success, all players that were in the lobby before, are notified about the new player with a\n[WsMessage::LobbyJoin] message.","operationId":"accept_invite","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Invitation was accepted"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/lobbies":{"get":{"tags":["Lobbies"],"summary":"Retrieves all open lobbies.","description":"Retrieves all open lobbies.\n\nIf `password` is `true`, the lobby is secured by a user-set password","operationId":"get_all_lobbies","responses":{"200":{"description":"Returns all currently open lobbies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetLobbiesResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"post":{"tags":["Lobbies"],"summary":"Create a new lobby","description":"Create a new lobby\n\nIf you are already in another lobby, an error is returned.\n`max_players` must be between 2 and 34 (inclusive).\nIf `password` is an empty string, an error is returned.\nIf you are not connected via websocket, an error is returned.\n\nYou are placed in the lobby and in the corresponding chatroom","operationId":"create_lobby","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLobbyRequest"}}},"required":true},"responses":{"200":{"description":"Lobby got created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLobbyResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/lobbies/{lobby_uuid}/{player_uuid}":{"delete":{"tags":["Lobbies"],"summary":"Kick a player from an open lobby","description":"Kick a player from an open lobby\n\nThis endpoint can only be used by the lobby owner.\n\nAll players in the lobby as well as the kick player will receive a [WsMessage::LobbyKick]\nmessage via websocket on success.","operationId":"kick_player_from_lobby","parameters":[{"name":"lobby_uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"player_uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Player was kicked"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/lobbies/{uuid}":{"get":{"tags":["Lobbies"],"summary":"Retrieves an open lobbies.","description":"Retrieves an open lobbies.\n\nIf `password` is `true`, the lobby is secured by a user-set password","operationId":"get_lobby","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Returns all currently open lobbies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetLobbyResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]},"delete":{"tags":["Lobbies"],"summary":"Close an open lobby","description":"Close an open lobby\n\nThis endpoint can only be used by the lobby owner.\nFor joined users, see `POST /lobbies/{uuid}/leave`.\n\nOn success, all joined players will receive a [WsMessage::LobbyClosed] message via websocket.","operationId":"close_lobby","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Lobby closed"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/lobbies/{uuid}/join":{"post":{"tags":["Lobbies"],"summary":"Join an existing lobby","description":"Join an existing lobby\n\nThe executing user must not be the owner of a lobby or member of a lobby.\nTo be placed in a lobby, a active websocket connection is required.\n\nAs a lobby might be protected by password, the optional parameter `password` may be specified.\nIf the provided password was incorrect, the error [ApiError::MissingPrivileges] is returned.\nIf the lobby isn't protected, but a password was found in the request, it is ignored.\n\nIf the lobby is already full, a [ApiError::LobbyFull] error is returned.\n\nOn success, all players that were in the lobby before, are notified about the new player with a\n[WsMessage::LobbyJoin] message.","operationId":"join_lobby","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/JoinLobbyRequest"}}},"required":true},"responses":{"200":{"description":"Joined lobby successfully"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/lobbies/{uuid}/leave":{"post":{"tags":["Lobbies"],"summary":"Leave an open lobby","description":"Leave an open lobby\n\nThis endpoint can only be used by joined users.\nFor the lobby owner, you want to use `DELETE /lobbies/{uuid}`.\n\nAll players in the lobby will receive a [WsMessage::LobbyLeave] message via websocket on success.","operationId":"leave_lobby","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Left the lobby"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/lobbies/{uuid}/start":{"post":{"tags":["Lobbies"],"summary":"Start a game from an existing lobby.","description":"Start a game from an existing lobby.\n\nThe executing user must be the owner of the lobby.\n\nThe lobby is deleted in the process, a new chatroom is created and all messages from the\nlobby chatroom are attached to the game chatroom.\n\nThis will invoke a [WsMessage::GameStarted] message that is sent via websocket to all\nmembers of the lobby to inform them which lobby was started. It also contains the the new and\nold chatroom uuids to make mapping for the clients easier.\n\nAfter the game started, the lobby owner must use the `PUT /api/v2/games/{uuid}` endpoint to\nupload the initial game state.\n\n**Note**:\nThis behaviour is subject to change.\nThe server should be set the order in which players are allowed to make their turns.\nThis allows the server to detect malicious players trying to update the game state before\nits their turn.","operationId":"start_game","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Lobby got created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StartGameResponse"}}}},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/v2/ws":{"get":{"tags":["Websocket"],"summary":"Start a websocket connection","description":"Start a websocket connection\n\nA heartbeat PING packet is sent constantly (every 10s).\nIf no response is retrieved within 30s of the last transmission, the socket\nwill be closed.","operationId":"websocket","responses":{"101":{"description":"Websocket is initialized"},"400":{"description":"Client error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"security":[{"session_cookie":[]}]}},"/api/version":{"get":{"tags":["Version"],"summary":"This endpoint is for clients to detect which version this server currently supports","description":"This endpoint is for clients to detect which version this server currently supports","operationId":"version","responses":{"200":{"description":"Login successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionResponse"}}}}}}}},"components":{"schemas":{"AccountRegistrationRequest":{"type":"object","description":"The content to register a new account","required":["username","display_name","password"],"properties":{"username":{"type":"string","example":"user123"},"display_name":{"type":"string","example":"Herbert"},"password":{"type":"string","example":"super-secure-password"}}},"AccountResponse":{"type":"object","description":"The account data","required":["uuid","username","display_name"],"properties":{"uuid":{"type":"string","format":"uuid"},"username":{"type":"string","example":"user123"},"display_name":{"type":"string","example":"Herbert"}}},"ApiErrorResponse":{"type":"object","description":"The Response that is returned in case of an error\n\nFor client errors the HTTP status code will be 400,\nfor server errors the 500 will be used.","required":["message","status_code"],"properties":{"message":{"type":"string","example":"Error message is here"},"status_code":{"$ref":"#/components/schemas/ApiStatusCode"}}},"ApiStatusCode":{"type":"integer","description":"The status code represents a unique identifier for an error.\n\nError codes in the range of 1000..2000 represent client errors\nthat could be handled by the client.\nError codes in the range of 2000..3000 represent server errors.","enum":[1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,2000,2001,2002]},"ChatMember":{"allOf":[{"$ref":"#/components/schemas/AccountResponse"},{"type":"object","required":["joined_at"],"properties":{"joined_at":{"type":"string","format":"date-time"}}}],"description":"A member of a chatroom"},"ChatMessage":{"type":"object","description":"The message of a chatroom\n\nThe parameter `uuid` is used to uniquely identify a message","required":["uuid","sender","message","created_at"],"properties":{"uuid":{"type":"string","format":"uuid"},"sender":{"$ref":"#/components/schemas/AccountResponse"},"message":{"type":"string","example":"Hello there!"},"created_at":{"type":"string","format":"date-time"}}},"CreateFriendRequest":{"type":"object","description":"The request of a new friendship","required":["uuid"],"properties":{"uuid":{"type":"string","format":"uuid","description":"The uuid of the new friend"}}},"CreateInviteRequest":{"type":"object","description":"The request to invite a friend into a lobby","required":["friend_uuid","lobby_uuid"],"properties":{"friend_uuid":{"type":"string","format":"uuid"},"lobby_uuid":{"type":"string","format":"uuid"}}},"CreateLobbyRequest":{"type":"object","description":"The parameters to create a lobby\n\n`max_players` must be greater or equals 2","required":["name","max_players"],"properties":{"name":{"type":"string","example":"Herbert's lobby"},"password":{"type":"string","example":"super-secure-password","nullable":true},"max_players":{"type":"integer","format":"int32","example":4,"minimum":0.0}}},"CreateLobbyResponse":{"type":"object","description":"The response of a create lobby request.\n\nIt contains the uuid of the created lobby and the uuid of the created chatroom for the lobby","required":["lobby_uuid","lobby_chat_room_uuid"],"properties":{"lobby_uuid":{"type":"string","format":"uuid"},"lobby_chat_room_uuid":{"type":"string","format":"uuid"}}},"FriendRequestResponse":{"type":"object","description":"A single friend request","required":["uuid","from","to"],"properties":{"uuid":{"type":"string","format":"uuid"},"from":{"$ref":"#/components/schemas/AccountResponse"},"to":{"$ref":"#/components/schemas/AccountResponse"}}},"FriendResponse":{"type":"object","description":"A single friend","required":["uuid","chat_uuid","friend"],"properties":{"uuid":{"type":"string","format":"uuid"},"chat_uuid":{"type":"string","format":"uuid"},"friend":{"$ref":"#/components/schemas/OnlineAccountResponse"}}},"GameOverviewResponse":{"type":"object","description":"A shortened game state identified by its ID and state identifier\n\nIf the state (`game_data_id`) of a known game differs from the last known\nidentifier, the server has a newer state of the game. The `last_activity`\nfield is a convenience attribute and shouldn't be used for update checks.","required":["game_uuid","game_data_id","name","max_players","last_activity","last_player","chat_room_uuid"],"properties":{"game_uuid":{"type":"string","format":"uuid"},"game_data_id":{"type":"integer","format":"int64","example":1337,"minimum":0.0},"name":{"type":"string","example":"Herbert's game"},"max_players":{"type":"integer","format":"int32","example":7},"last_activity":{"type":"string","format":"date-time"},"last_player":{"$ref":"#/components/schemas/AccountResponse"},"chat_room_uuid":{"type":"string","format":"uuid"}}},"GameStateResponse":{"type":"object","description":"A single game state identified by its Uuid and state identifier\n\nIf the state (`game_data_id`) of a known game differs from the last known\nidentifier, the server has a newer state of the game. The `last_activity`\nfield is a convenience attribute and shouldn't be used for update checks.","required":["game_data","game_data_id","name","max_players","last_activity","last_player","chat_room_uuid"],"properties":{"game_data":{"type":"string"},"game_data_id":{"type":"integer","format":"int64","example":1337,"minimum":0.0},"name":{"type":"string","example":"Herbert's game"},"max_players":{"type":"integer","format":"int32","example":7},"last_activity":{"type":"string","format":"date-time"},"last_player":{"$ref":"#/components/schemas/AccountResponse"},"chat_room_uuid":{"type":"string","format":"uuid"}}},"GameUploadRequest":{"type":"object","description":"The request a user sends to the server to upload a new game state","required":["game_data"],"properties":{"game_data":{"type":"string"}}},"GameUploadResponse":{"type":"object","description":"The response a user receives after uploading a new game state successfully","required":["game_data_id"],"properties":{"game_data_id":{"type":"integer","format":"int64","example":1337,"minimum":0.0}}},"GetAllChatsResponse":{"type":"object","description":"All chat rooms your user has access to","required":["friend_chat_rooms","lobby_chat_rooms","game_chat_rooms"],"properties":{"friend_chat_rooms":{"type":"array","items":{"type":"string","format":"uuid"}},"lobby_chat_rooms":{"type":"array","items":{"type":"string","format":"uuid"}},"game_chat_rooms":{"type":"array","items":{"type":"string","format":"uuid"}}}},"GetChatResponse":{"type":"object","description":"The response to a get chat\n\n`messages` should be sorted by the datetime of `message.created_at`.","required":["members","messages"],"properties":{"members":{"type":"array","items":{"$ref":"#/components/schemas/ChatMember"}},"messages":{"type":"array","items":{"$ref":"#/components/schemas/ChatMessage"}}}},"GetFriendResponse":{"type":"object","description":"A list of your friends and friend requests\n\n`friends` is a list of already established friendships\n`friend_requests` is a list of friend requests (ingoing and outgoing)","required":["friends","friend_requests"],"properties":{"friends":{"type":"array","items":{"$ref":"#/components/schemas/FriendResponse"}},"friend_requests":{"type":"array","items":{"$ref":"#/components/schemas/FriendRequestResponse"}}}},"GetGameOverviewResponse":{"type":"object","description":"An overview of games a player participates in","required":["games"],"properties":{"games":{"type":"array","items":{"$ref":"#/components/schemas/GameOverviewResponse"}}}},"GetInvite":{"type":"object","description":"A single invite","required":["uuid","created_at","from","lobby_uuid"],"properties":{"uuid":{"type":"string","format":"uuid"},"created_at":{"type":"string","format":"date-time"},"from":{"$ref":"#/components/schemas/AccountResponse"},"lobby_uuid":{"type":"string","format":"uuid"}}},"GetInvitesResponse":{"type":"object","description":"The invites that an account has received","required":["invites"],"properties":{"invites":{"type":"array","items":{"$ref":"#/components/schemas/GetInvite"}}}},"GetLobbiesResponse":{"type":"object","description":"The lobbies that are open","required":["lobbies"],"properties":{"lobbies":{"type":"array","items":{"$ref":"#/components/schemas/LobbyResponse"}}}},"GetLobbyResponse":{"type":"object","description":"A single lobby","required":["uuid","name","max_players","created_at","password","owner","current_players","chat_room_uuid"],"properties":{"uuid":{"type":"string","format":"uuid"},"name":{"type":"string","example":"Herbert's lobby"},"max_players":{"type":"integer","format":"int32","example":4,"minimum":0.0},"created_at":{"type":"string","format":"date-time"},"password":{"type":"boolean"},"owner":{"$ref":"#/components/schemas/AccountResponse"},"current_players":{"type":"array","items":{"$ref":"#/components/schemas/AccountResponse"}},"chat_room_uuid":{"type":"string","format":"uuid"}}},"JoinLobbyRequest":{"type":"object","description":"The request to join a lobby","properties":{"password":{"type":"string","example":"super-secure-password","nullable":true}}},"LobbyResponse":{"type":"object","description":"A single lobby","required":["uuid","name","max_players","current_players","created_at","password","owner","chat_room_uuid"],"properties":{"uuid":{"type":"string","format":"uuid"},"name":{"type":"string","example":"Herbert's lobby"},"max_players":{"type":"integer","format":"int32","example":4,"minimum":0.0},"current_players":{"type":"integer","format":"int32","example":3,"minimum":0.0},"created_at":{"type":"string","format":"date-time"},"password":{"type":"boolean"},"owner":{"$ref":"#/components/schemas/AccountResponse"},"chat_room_uuid":{"type":"string","format":"uuid"}}},"LoginRequest":{"type":"object","description":"The request data of a login request","required":["username","password"],"properties":{"username":{"type":"string","example":"user123"},"password":{"type":"string","example":"super-secure-password"}}},"LookupAccountUsernameRequest":{"type":"object","description":"The request to lookup an account by its username","required":["username"],"properties":{"username":{"type":"string"}}},"OnlineAccountResponse":{"type":"object","description":"The account data","required":["uuid","username","display_name","online"],"properties":{"uuid":{"type":"string","format":"uuid"},"username":{"type":"string","example":"user123"},"display_name":{"type":"string","example":"Herbert"},"online":{"type":"boolean"}}},"SendMessageRequest":{"type":"object","description":"The request for sending a message to a chatroom","required":["message"],"properties":{"message":{"type":"string","example":"Hello there!"}}},"SetPasswordRequest":{"type":"object","description":"The set password request data\n\nThe parameter `new_password` must not be empty","required":["old_password","new_password"],"properties":{"old_password":{"type":"string","example":"super-secure-password"},"new_password":{"type":"string","example":"ultra-secure-password!!11!"}}},"StartGameResponse":{"type":"object","description":"The response when starting a game","required":["game_uuid","game_chat_uuid"],"properties":{"game_uuid":{"type":"string","format":"uuid"},"game_chat_uuid":{"type":"string","format":"uuid"}}},"UpdateAccountRequest":{"type":"object","description":"Update account request data\n\nAll parameter are optional, but at least one of them is required.","properties":{"username":{"type":"string","example":"user321","nullable":true},"display_name":{"type":"string","example":"Heeeerbeeeert","nullable":true}}},"VersionResponse":{"type":"object","description":"The version data for clients","required":["version"],"properties":{"version":{"type":"integer","format":"int32","example":2,"minimum":0.0}}}},"securitySchemes":{"session_cookie":{"type":"apiKey","in":"cookie","name":"id"}}}}