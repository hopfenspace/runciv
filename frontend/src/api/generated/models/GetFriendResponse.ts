/* tslint:disable */
/* eslint-disable */
/**
 * runciv
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FriendRequestResponse } from './FriendRequestResponse';
import {
    FriendRequestResponseFromJSON,
    FriendRequestResponseFromJSONTyped,
    FriendRequestResponseToJSON,
} from './FriendRequestResponse';
import type { FriendResponse } from './FriendResponse';
import {
    FriendResponseFromJSON,
    FriendResponseFromJSONTyped,
    FriendResponseToJSON,
} from './FriendResponse';

/**
 * A list of your friends and friend requests
 * 
 * `friends` is a list of already established friendships
 * `friend_requests` is a list of friend requests (ingoing and outgoing)
 * @export
 * @interface GetFriendResponse
 */
export interface GetFriendResponse {
    /**
     * 
     * @type {Array<FriendResponse>}
     * @memberof GetFriendResponse
     */
    friends: Array<FriendResponse>;
    /**
     * 
     * @type {Array<FriendRequestResponse>}
     * @memberof GetFriendResponse
     */
    friendRequests: Array<FriendRequestResponse>;
}

/**
 * Check if a given object implements the GetFriendResponse interface.
 */
export function instanceOfGetFriendResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "friends" in value;
    isInstance = isInstance && "friendRequests" in value;

    return isInstance;
}

export function GetFriendResponseFromJSON(json: any): GetFriendResponse {
    return GetFriendResponseFromJSONTyped(json, false);
}

export function GetFriendResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetFriendResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'friends': ((json['friends'] as Array<any>).map(FriendResponseFromJSON)),
        'friendRequests': ((json['friend_requests'] as Array<any>).map(FriendRequestResponseFromJSON)),
    };
}

export function GetFriendResponseToJSON(value?: GetFriendResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'friends': ((value.friends as Array<any>).map(FriendResponseToJSON)),
        'friend_requests': ((value.friendRequests as Array<any>).map(FriendRequestResponseToJSON)),
    };
}

