/* tslint:disable */
/* eslint-disable */
/**
 * runciv
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The parameters to create a lobby
 * 
 * `max_players` must be greater or equals 2
 * @export
 * @interface CreateLobbyRequest
 */
export interface CreateLobbyRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateLobbyRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateLobbyRequest
     */
    password?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CreateLobbyRequest
     */
    maxPlayers: number;
}

/**
 * Check if a given object implements the CreateLobbyRequest interface.
 */
export function instanceOfCreateLobbyRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "maxPlayers" in value;

    return isInstance;
}

export function CreateLobbyRequestFromJSON(json: any): CreateLobbyRequest {
    return CreateLobbyRequestFromJSONTyped(json, false);
}

export function CreateLobbyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLobbyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'maxPlayers': json['max_players'],
    };
}

export function CreateLobbyRequestToJSON(value?: CreateLobbyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'password': value.password,
        'max_players': value.maxPlayers,
    };
}

