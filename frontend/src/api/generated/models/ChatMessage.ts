/* tslint:disable */
/* eslint-disable */
/**
 * runciv
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountResponse } from './AccountResponse';
import {
    AccountResponseFromJSON,
    AccountResponseFromJSONTyped,
    AccountResponseToJSON,
} from './AccountResponse';

/**
 * The message of a chatroom
 * 
 * The parameter `uuid` is used to uniquely identify a message
 * @export
 * @interface ChatMessage
 */
export interface ChatMessage {
    /**
     * 
     * @type {string}
     * @memberof ChatMessage
     */
    uuid: string;
    /**
     * 
     * @type {AccountResponse}
     * @memberof ChatMessage
     */
    sender: AccountResponse;
    /**
     * 
     * @type {string}
     * @memberof ChatMessage
     */
    message: string;
    /**
     * 
     * @type {Date}
     * @memberof ChatMessage
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the ChatMessage interface.
 */
export function instanceOfChatMessage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "sender" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function ChatMessageFromJSON(json: any): ChatMessage {
    return ChatMessageFromJSONTyped(json, false);
}

export function ChatMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'sender': AccountResponseFromJSON(json['sender']),
        'message': json['message'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function ChatMessageToJSON(value?: ChatMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'sender': AccountResponseToJSON(value.sender),
        'message': value.message,
        'created_at': (value.createdAt.toISOString()),
    };
}

